################################################################################
# Copyright (C) 2022 by Andreas Zenk
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
################################################################################
- function: "test::FreeFunction"
  return: "void"
  level: "free"
  parameters:
  - "test::StringContainer"
  include: "#include \"test.h\""
- function: "test::FreeTemplateFunction<test::StringContainer>"
  return: "void"
  level: "free"
  parameters:
  - "test::StringContainer"
  include: "#include \"test.h\""
- function: "test::Normal::Normal"
  return: "void"
  level: "member"
  parameters:
  - "test::StringContainer"
  include: "#include \"test.h\""
- function: "test::Normal::Normal"
  return: "void"
  level: "member"
  parameters:
  - "test::Normal const&"
  include: "#include \"test.h\""
- function: "test::Normal::Normal"
  return: "void"
  level: "member"
  parameters:
  - "test::Normal &&"
  include: "#include \"test.h\""
- function: "test::Normal::operator="
  return: "test::Normal&"
  level: "member"
  parameters:
  - "test::Normal const&"
  include: "#include \"test.h\""
- function: "test::Normal::operator="
  return: "test::Normal&"
  level: "member"
  parameters:
  - "test::Normal &&"
  include: "#include \"test.h\""
- function: "test::Normal::MemberFunction"
  return: "void"
  level: "const"
  parameters:
  - "test::StringContainer"
  include: "#include \"test.h\""
- function: "test::Normal::StaticMemberFunction"
  return: "void"
  level: "free"
  parameters:
  - "test::StringContainer"
  include: "#include \"test.h\""
- function: "test::Normal::ParamVal"
  return: "void"
  level: "member"
  parameters:
  - "test::StringContainer const"
  include: "#include \"test.h\""
- function: "test::Normal::ParamRef"
  return: "void"
  level: "const"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::ParamConstRef"
  return: "void"
  level: "const"
  parameters:
  - "test::StringContainer const&"
  include: "#include \"test.h\""
- function: "test::Normal::ParamPtr"
  return: "void"
  level: "const"
  parameters:
  - "test::StringContainer *"
  include: "#include \"test.h\""
- function: "test::Normal::ParamConstPtr"
  return: "void"
  level: "const"
  parameters:
  - "test::StringContainer const * const"
  include: "#include \"test.h\""
- function: "test::Normal::ParamMove"
  return: "void"
  level: "const"
  parameters:
  - "test::StringContainer &&"
  include: "#include \"test.h\""
- function: "test::Normal::ParamMultiple"
  return: "void"
  level: "const"
  parameters:
  - "test::StringContainer"
  - "test::StringContainer"
  include: "#include \"test.h\""
- function: "test::Normal::RetVal"
  return: "test::StringContainer"
  level: "const"
  parameters:
  include: "#include \"test.h\""
- function: "test::Normal::RetRef"
  return: "test::StringContainer&"
  level: "const"
  parameters:
  include: "#include \"test.h\""
- function: "test::Normal::RetConstRef"
  return: "test::StringContainer const&"
  level: "const"
  parameters:
  include: "#include \"test.h\""
- function: "test::Normal::RetPtr"
  return: "test::StringContainer*"
  level: "const"
  parameters:
  include: "#include \"test.h\""
- function: "test::Normal::RetConstPtr"
  return: "test::StringContainer const * const"
  level: "const"
  parameters:
  include: "#include \"test.h\""
- function: "test::Normal::RetMove"
  return: "test::StringContainer&&"
  level: "member"
  parameters:
  include: "#include \"test.h\""
- function: "test::Normal::Overload"
  return: "void"
  level: "const"
  parameters:
  include: "#include \"test.h\""
- function: "test::Normal::Overload"
  return: "void"
  level: "const"
  parameters:
  - "test::StringContainer"
  include: "#include \"test.h\""
- function: "test::Normal::Prefix"
  return: "void"
  level: "const"
  parameters:
  include: "#include \"test.h\""
- function: "test::Normal::PrefixPostfix"
  return: "void"
  level: "const"
  parameters:
  include: "#include \"test.h\""
- function: "test::Normal::operator++"
  return: "test::Normal&"
  level: "member"
  parameters:
  include: "#include \"test.h\""
- function: "test::Normal::operator++"
  return: "test::Normal&"
  level: "member"
  parameters:
  - int
  include: "#include \"test.h\""
- function: "test::Normal::operator--"
  return: "test::Normal&"
  level: "member"
  parameters:
  include: "#include \"test.h\""
- function: "test::Normal::operator--"
  return: "test::Normal&"
  level: "member"
  parameters:
  - int
  include: "#include \"test.h\""
- function: "test::Normal::operator+="
  return: "test::Normal&"
  level: "member"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator-="
  return: "test::Normal&"
  level: "member"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator*="
  return: "test::Normal&"
  level: "member"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator/="
  return: "test::Normal&"
  level: "member"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator%="
  return: "test::Normal&"
  level: "member"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator^="
  return: "test::Normal&"
  level: "member"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator&="
  return: "test::Normal&"
  level: "member"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator|="
  return: "test::Normal&"
  level: "member"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator>>="
  return: "test::Normal&"
  level: "member"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator<<="
  return: "test::Normal&"
  level: "member"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator!="
  return: "bool"
  level: "const"
  parameters:
  - "test::StringContainer const&"
  include: "#include \"test.h\""
- function: "test::Normal::operator<="
  return: "bool"
  level: "const"
  parameters:
  - "test::StringContainer const&"
  include: "#include \"test.h\""
- function: "test::Normal::operator>="
  return: "bool"
  level: "const"
  parameters:
  - "test::StringContainer const&"
  include: "#include \"test.h\""
- function: "test::Normal::operator=="
  return: "bool"
  level: "const"
  parameters:
  - "test::StringContainer const&"
  include: "#include \"test.h\""
- function: "test::Normal::operator>>"
  return: "test::Normal&"
  level: "member"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator<<"
  return: "test::Normal&"
  level: "member"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator()"
  return: "test::StringContainer&"
  level: "member"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator[]"
  return: "test::StringContainer&"
  level: "member"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator&&"
  return: "bool"
  level: "const"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator||"
  return: "bool"
  level: "const"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator!"
  return: "bool"
  level: "const"
  parameters:
  include: "#include \"test.h\""
- function: "test::Normal::operator+"
  return: "test::StringContainer"
  level: "const"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator-"
  return: "test::StringContainer"
  level: "const"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator*"
  return: "test::StringContainer"
  level: "const"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator/"
  return: "test::StringContainer"
  level: "const"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator%"
  return: "test::StringContainer"
  level: "const"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator^"
  return: "test::StringContainer"
  level: "const"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator&"
  return: "test::StringContainer"
  level: "const"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator|"
  return: "test::StringContainer"
  level: "const"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator~"
  return: "test::StringContainer"
  level: "const"
  parameters:
  include: "#include \"test.h\""
- function: "test::Normal::operator<"
  return: "bool"
  level: "const"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator>"
  return: "bool"
  level: "const"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator,"
  return: "test::StringContainer"
  level: "const"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::Normal::operator*"
  return: "test::StringContainer"
  level: "const"
  parameters:
  include: "#include \"test.h\""
- function: "test::Normal::operator&"
  return: "test::Normal*"
  level: "member"
  parameters:
  include: "#include \"test.h\""
- function: "test::Base::Virt"
  return: "void"
  level: "const"
  parameters:
  - "test::StringContainer"
  include: "#include \"test.h\""
- function: "test::Derived::Virt"
  return: "void"
  level: "const"
  parameters:
  - "test::StringContainer"
  include: "#include \"test.h\""
- function: "test::Derived::PureVirt"
  return: "void"
  level: "const"
  parameters:
  - "test::StringContainer"
  include: "#include \"test.h\""
- function: "test::Template<test::StringContainer>::Member"
  return: "void"
  level: "const"
  parameters:
  - "test::StringContainer"
  include: "#include \"test.h\""
- function: "test::Template<test::StringContainer>::TemplateMember<test::StringContainer>"
  return: "void"
  level: "const"
  parameters:
  - "test::StringContainer"
  include: "#include \"test.h\""
- function: "test::operator++"
  return: "test::StringContainer&"
  level: "free"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator++"
  return: "test::StringContainer"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "int"
  include: "#include \"test.h\""
- function: "test::operator--"
  return: "test::StringContainer&"
  level: "free"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator--"
  return: "test::StringContainer"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "int"
  include: "#include \"test.h\""
- function: "test::operator+="
  return: "test::StringContainer&"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator-="
  return: "test::StringContainer&"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator*="
  return: "test::StringContainer&"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator/="
  return: "test::StringContainer&"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator%="
  return: "test::StringContainer&"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator^="
  return: "test::StringContainer&"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator&="
  return: "test::StringContainer&"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator|="
  return: "test::StringContainer&"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator>>="
  return: "test::StringContainer&"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator<<="
  return: "test::StringContainer&"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator!="
  return: "bool"
  level: "free"
  parameters:
  - "test::StringContainer const&"
  - "test::StringContainer const&"
  include: "#include \"test.h\""
- function: "test::operator<="
  return: "bool"
  level: "free"
  parameters:
  - "test::StringContainer const&"
  - "test::StringContainer const&"
  include: "#include \"test.h\""
- function: "test::operator>="
  return: "bool"
  level: "free"
  parameters:
  - "test::StringContainer const&"
  - "test::StringContainer const&"
  include: "#include \"test.h\""
- function: "test::operator=="
  return: "bool"
  level: "free"
  parameters:
  - "test::StringContainer const&"
  - "test::StringContainer const&"
  include: "#include \"test.h\""
- function: "test::operator>>"
  return: "test::StringContainer&"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator<<"
  return: "test::StringContainer&"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator&&"
  return: "bool"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator||"
  return: "bool"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator!"
  return: "bool"
  level: "free"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator+"
  return: "test::StringContainer"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator-"
  return: "test::StringContainer"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator*"
  return: "test::StringContainer"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator/"
  return: "test::StringContainer"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator%"
  return: "test::StringContainer"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator^"
  return: "test::StringContainer"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator&"
  return: "test::StringContainer"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator|"
  return: "test::StringContainer"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator~"
  return: "test::StringContainer"
  level: "free"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator<"
  return: "bool"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator>"
  return: "bool"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator,"
  return: "test::StringContainer"
  level: "free"
  parameters:
  - "test::StringContainer&"
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator*"
  return: "test::StringContainer"
  level: "free"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""
- function: "test::operator&"
  return: "test::StringContainer*"
  level: "free"
  parameters:
  - "test::StringContainer&"
  include: "#include \"test.h\""